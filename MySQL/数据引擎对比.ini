提到MySQL，不了解MyISAM与InnoDB是说不过去的，它们是'最著名、使用最广泛的'两种'MySQL存储引擎'。


什么是MyISAM?
    MyISAM是'MySQL关系数据库管理系统'的'默认储存引擎'('5.5之前')。
    这种MySQL表存储结构从旧的ISAM代码'扩展出许多有用的功能'。
    '在新版本的MySQL中，InnoDB引擎'由于其对事务，参照完整性，以及更高的并发性等优点'开始广泛的取代MyISAM'。
    每一个'MyISAM表'都对应于硬盘上的三个文件。这三个文件有'一样的文件名'，但是有'不同的扩展名'以指示'其类型用途'： 
    '.frm文件'保存'表的定义'，但是这个文件'并不是MyISAM引擎的一部分'，而是'服务器的一部分'；
    '.MYD'保存'表的数据'；
    '.MYI'是'表的索引文件'。

什么是InnoDB?
    InnoDB是MySQL的另一个存储引擎，目前MySQL AB所发行新版的标准，被包含在所有二进制安装包里，
    '5.5之后作为默认的存储引擎'。较之于其它的存储引擎'它的优点是它支持兼容ACID的事务'（类似于PostgreSQL),以及'参数完整性'（即'对外键的支持'）。
    '[此行忽略不看]'Oracle公司与2005年10月收购了Innobase。Innobase采用双认证授权。它使用GNU发行，也允许其它想将InnoDB结合到商业软件的团体获得授权。
    '目前比较普及的存储引擎'是'MyISAM'和'InnoDB'。'MyISAM与InnoDB的主要的不同点' '在于性能和事务控制上'。
    
    'MyISAM' '是早期ISAM的扩展实现'(Indexed Sequential Access Method，MySQL5.0之后已经不支持ISAM了），
    'ISAM'被设计为适合处理'读频率远大于写频率'这样的情况，因此'ISAM以及后来的MyISAM'都'没有考虑对事务的支持'，
    排除了事务记录，'ISAM的查询效率相当可观'，而且'内存占用很少'。
    'MyISAM'在'继承了这类优点'的同时，与时俱进地提供了'大量实用的新特性和相关工具'。
    例如'考虑到并发控制'，'提供了表级锁'，虽然MyISAM本身'不支持容错'，但'可以通过 myisamchk 进行故障恢复'。
    而且由于MyISAM是'每张表使用各自独立的存储文件'（'MYD数据文件和MYI索引文件'），
    '使得备份及恢复十分方便'（'拷贝覆盖即可'），而且还支持在线恢复。

    与其他存储引擎比较，'MyISAM具有检查和修复表格的大多数工具'. MyISAM'表格可以被压缩'，而且它们'支持全文(fulltext)搜索'。
    它们'不是事务安全的',而且'也不支持外键'。所以'如果你的应用'是'不需要事务'，处理的只是基本的CRUD操作，那么'MyISAM是不二选择'。

    InnoDB被设计成'适用于高并发读写的情况'，'使用MVCC'(Multi-Version Concurrency Control)以及'行级锁'来提供'遵从ACID的事务支持'。
    InnoDB支持'外键参照完整性'，'具备故障恢复能力'。另外 'InnoDB的性能'其实还是不错的，特别是'在处理大数据量的情况下',
    用官方的话说就是：'InnoDB的CPU效率'是其他'基于磁盘的关系数据库存储引擎'所不能比的。
    
    不过'InnoDB的备份恢复'要'麻烦一点'，除非你使用了'4.1以后版本提供的 Mulit-tablespace支持'，
    因为InnoDB和MyISAM不同，'InnoDB的数据文件并不是独立对应于每张表的'，而是'使用的共享表空间'，
    '简单的拷贝覆盖方法'对他'不适用'，'必须在停掉MYSQL后' '才能进行数据恢复'。
    
    '使用Per-Table Tablespacesd'(my.cnf中的参数配置)，使其'每张表对应一个独立的表空间文件'，则'情况要简单很多'。
    ['看不懂，这行略过了']它与'BDB类型'具有'相同的特性'，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性,因此如果需要一个事务安全的存储引擎，建议使用它。

    一般来说，'如果需要事务支持，并且有较高的并发读写频率，InnoDB是不错的选择'。
    要是并发读写频率不高的话，其实可以考虑BDB，但由于'在 MySQL5.1及其以后版本中，将不再提供BDB支持'。这个选项也就没有了
    
    'InnoDB默认情况下的事务'是'打开的'(set autocommit = 0)就是说每插入一条记录时候，InnoDB类型的表都会把它当作一个单独的事务来处理.
    所以如果我们'插入了10000条记录,而且没有将事务关闭'，那么 InnoDB类型的表会把它'当作10000个事务来处理'，
    此时插入的总时间是很多的，这个时候一定'要首先把事务关掉再插入'，这样的速度就很快了 
    至于Heap和BDB（Berkeley DB），相对来说，普及率不如前两种，但在有些情况下，还是挺适用的Heap存储引擎就是将数据存储在内存中，由于没有磁盘I/O的等待，速度极快。
    但由于'是内存存储引擎'，所做的'任何修改'在'服务器重启后'都将消失。'Heap挺适合做测试的时候使用'
    'BDB是MySQL第一款事务安全的存储引擎'。在Berkeley DB database library的基础上建立，同样是事务安全的，
    但'BDB的普及率显然不及InnoDB'，因为大多数在MySQL中'寻找支持事务的存储引擎的同时' '也在找支 持MVCC或是行级锁定存储引擎'，
    '而BDB只支持Page-level Lock'。
        独立表空间：
            在配置文件（my.cnf）中设置： innodb_file_per_table
            优点：
                '每个表都有自已独立的表空间。'
                每个'表的数据和索引'都会'存在自已的表空间'中。
                可以实现'单表在不同的数据库中移动'。
                空间可以回收（除drop table操作处，表空不能自已回收）
                    'Drop table操作自动回收表空间'，如果对于统计分析或是日志表，删除大量数据后可以通过:alter table TableName engine=innodb;回缩不用的空间。
                    对于使innodb-plugin的Innodb'使用turncate table也会使空间收缩'。
                    对于使用独立表空间的表，不管怎么删除，'表空间的碎片不会太严重的影响性能'，而且还有机会处理。
            缺点：
            '单表增加过大，如超过100个G'。

InnoDB引擎
InnoDB是一个'事务型的存储引擎'，支持回滚，'设计目标'是'处理大数量数据时提供高性能的服务'，它在运行时会'在内存中建立缓冲池'，用于'缓冲数据和索引'。

InnoDB引擎优点

    1、支持'事务处理'、'ACID事务特性'；

    2、实现了SQL标准中的'四种隔离级别'；

    3、支持'行级锁'和'外键约束'；

    4、可以'利用事务日志进行数据恢复'。

    5、'锁级别'为'行锁'，'行锁优点'是适用于'高并发的频繁表修改'，高并发时'性能优于MyISAM'。缺点是'系统消耗较大'。

    6、'索引不仅缓存自身，也缓存数据'，相比 MyISAM '需要更大的内存'。

InnoDB引擎缺点
1 因为它'没有保存表的行数'，当'使用COUNT统计时' '会扫描全表'。

MyISAM引擎
MyISAM 是 MySQL 5.5.5 之前的默认引擎，它的设计目标是'快速读取'。

MyISAM引擎优点
1.'高性能读取'；

2.因为它'保存了表的行数'，当'使用COUNT统计时'不'会扫描全表'；

MyISAM引擎缺点

1、'锁级别为表锁'，表锁优点是开销小，加锁快；'缺点是锁粒度大'，'发生锁冲突概率较高'，'并发能力低'，这个引擎适合查询为主的业务。
2、此引擎不支持事务，也不支持外键。
3、'INSERT和UPDATE操作需要锁定整个表'；
4、它'存储表的行数'，于是SELECT COUNT(*) FROM TABLE时只需要直接读取已经保存好的值而'不需要进行全表扫描'。

适用场景
    MyISAM适合：
        (1)'做很多count 的计算'；
        (2)查多写少；
        (3)'没有事务'。

InnoDB适合：
    (1)'可靠性要求比较高'，或者'要求事务'；
    (2)'表更新和查询'都相当的'频繁'，并发操作较高的情况下。

表格对比
属性	MyISAM	Heap	BDB	InnoDB
事务	不支持	不支持	支持	支持
锁粒度	表锁	表锁	页锁(page, 8KB)	行锁
存储	拆分文件	内存中	每个表一个文件	表空间
隔离等级	无	无	读已提交	所有
可移植格式	是	N/A	否	是
引用完整性	否	否	否	是
数据主键	否	否	是	是
MySQL缓存数据记录	无	有	有	有
可用性	全版本	全版本	MySQL－Max	全版本

一些'细节上的差别'

1、InnoDB不支持FULLTEXT类型的索引，MySQL5.6之后已经支持（实验性）。

2、InnoDB中'不保存表的具体行数'，也就是说，执行select count() from table时，
InnoDB要扫描一遍整个表来计算有多少行，但是'MyISAM只要简单的读出保存好的行数即可'。
注意的是，当count()语句包含 where条件时，'两种表的操作是一样的'。

3、对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。

4、DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。

5、LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，
导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。

6、另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表。